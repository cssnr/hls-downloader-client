name: "Lint"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [master]

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      #- name: "Debug event.json"
      #  if: ${{ always() && !cancelled() }}
      #  run: |
      #    cat "${GITHUB_EVENT_PATH}"

      - name: "Setup Python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: "Install"
        id: install
        run: |
          python -m pip install -U pip
          python -m pip install -Ur requirements-dev.txt

      - name: "Flake8"
        if: ${{ always() && !cancelled() }}
        run: |
          flake8 --max-line-length 119 --extend-exclude ".github" .

      - name: "Ruff"
        if: ${{ always() && !cancelled() }}
        uses: astral-sh/ruff-action@v3
        with:
          version: latest

      - name: "Black"
        if: ${{ always() && !cancelled() }}
        uses: psf/black@stable

      - name: "Isort"
        if: ${{ always() && !cancelled() }}
        uses: isort/isort-action@v1

      - name: "Mypy"
        if: ${{ always() && !cancelled() }}
        run: |
          mypy src

      #- name: "Hadolint"
      #  if: ${{ always() && !cancelled() }}
      #  uses: hadolint/hadolint-action@v3.1.0

      - name: "Prettier"
        if: ${{ always() && !cancelled() }}
        run: |
          echo "::group::Install"
          npm install prettier
          echo "::endgroup::"
          npx prettier --check .

      - name: "Yamllint"
        if: ${{ always() && !cancelled() }}
        env:
          CONFIG: "{extends: relaxed, ignore: [node_modules/], rules: {line-length: {max: 119}}}"
        run: |
          echo "::group::List Files"
          yamllint -d '${{ env.CONFIG }}' --list-files .
          echo "::endgroup::"
          yamllint -d '${{ env.CONFIG }}' .

      - name: "Actionlint"
        if: ${{ !cancelled() }}
        run: |
          echo "::group::Download"
          loc=$(curl -sI https://github.com/rhysd/actionlint/releases/latest | grep -i '^location:')
          echo "loc: ${loc}"
          tag=$(echo "${loc}" | sed -E 's|.*/tag/v?(.*)|\1|' | tr -d '\t\r\n')
          echo "tag: ${tag}"
          url="https://github.com/rhysd/actionlint/releases/latest/download/actionlint_${tag}_linux_amd64.tar.gz"
          echo "url: ${url}"
          curl -sL "${url}" | tar xz -C "${RUNNER_TEMP}" actionlint
          file "${RUNNER_TEMP}/actionlint"
          "${RUNNER_TEMP}/actionlint" --version
          echo "::endgroup::"
          "${RUNNER_TEMP}/actionlint" -color -verbose -shellcheck= -pyflakes=
